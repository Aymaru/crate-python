==================
Crate Client Usage
==================

Connect to a Database
=====================

Before we can start we have to import the crate client::

    >>> from crate import client

The client provides a ``connect()`` function which is 
used to establish a connection::

    >>> connection = client.connect([crate_host])

It's also possible to make a connection to multiple
hosts. If a server does not respond, the request is
automatically routed to the next server::

    >>> invalid_host = 'not_responding_host:9200'
    >>> connection = client.connect([crate_host, invalid_host])

It's possible to define a default timeout value in seconds for all servers using the optional
parameter ``timeout``::

    >>> connection = client.connect([crate_host, invalid_host], timeout=5)

Selecting Some Data
===================

To execute a command we use the cursor provided by
the connection::

    >>> cursor = connection.cursor()
    >>> cursor.execute("SELECT name FROM locations")

To retrieve a row we can use one of the cursor's
fetch functions (described below).

fetchone()
----------

``fetchone()`` with each call returns the next row
from the results::

    >>> result = cursor.fetchone()
    >>> pprint(result)
    {u'name': u'Aldebaran'}

If no more data is available, an empty result is returned::

    >>> while cursor.fetchone():
    ...     pass
    >>> cursor.fetchone()

fetchmany()
-----------

``fetch_many()`` returns a list of all remaining rows,
containing no more than the specified size of rows::

    >>> cursor.execute("SELECT name FROM locations")
    >>> result = cursor.fetchmany(2)
    >>> pprint(result)
    [{u'name': u'Aldebaran'}, {u'name': u'Argabuthon'}]

fetchall()
----------

``fetchall()`` returns a list of all remaining rows:: 
    
    >>> cursor.execute("SELECT name FROM locations")
    >>> result = cursor.fetchall()
    >>> pprint(result)
    [{u'name': u'Aldebaran'},
     {u'name': u'Argabuthon'},
     {u'name': u'Bartledan'},
     {u'name': u'Algol'},
     {u'name': u''},
     {u'name': u'North West Ripple'},
     {u'name': u'Alpha Centauri'},
     {u'name': None},
     {u'name': u'Outer Eastern Rim'},
     {u'name': u'Altair'}]

Closing the Connection
======================

    >>> cursor.close()
